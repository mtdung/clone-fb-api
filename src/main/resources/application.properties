server.port=8080
app.application-context=clone-api
app.application-version=v1
spring.application.name=clone-api
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
app.security.secret-key=thi$i$secret-key-this-use-for-jwt-token

spring.redis.host=redis-17663.c277.us-east-1-3.ec2.cloud.redislabs.com
spring.redis.port=17663
spring.redis.username=default
spring.redis.password=HUGupcL19XX53OwrhZXF5Y09gW9pZeCC

spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
# ===============================
# = DATA SOURCE
# ===============================
#spring.datasource.url=jdbc:h2:mem:horo_system
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Set here configurations for the database connection
spring.datasource.url=jdbc:mariadb://54.79.184.221:3306/fb_clone
spring.datasource.username=root
spring.datasource.password=fb@2024
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=false
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=none
# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Required connection configs for Kafka producer, consumer, and admin
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.bootstrap.servers=pkc-817wq.ap-east-1.aws.confluent.cloud:9092
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='MIQD3OUEZW4CM5JK' password='4wAeHZ9j0alAtgLBWnTiUs2swWNZMyApaggBVgMlQzQqpkLUrmCJeXJ/YtnNw9co';
spring.kafka.properties.security.protocol=SASL_SSL

# Best practice for higher availability in Apache Kafka clients prior to 3.0
spring.kafka.properties.session.timeout.ms=45000

# Required connection configs for Confluent Cloud Schema Registry
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.basic.auth.user.info={{ SR_API_KEY }}:{{ SR_API_SECRET }}
spring.kafka.properties.schema.registry.url=https://{{ SR_ENDPOINT }}




cloud.aws.region=eu-central-1
cloud.aws.credentials.access-key=AKIAWCEBOWBZ4BRUAE4P
cloud.aws.credentials.secret-key=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
application.bucket.attach-file=horo-system-buckets



app.security.expiration=100000000
app.security.refresh-token.expiration=100000000

application.bucket=horo-system-buckets
application.account.cloudfront=https://d135gf4c7d3yzt.cloudfront.net/

feign.authentication.url=localhost:8080/horo/authentication/public/api/v1
feign.notification.url=http://54.169.70.141:80/notification/api/v1
feign.horo.url=http://tuvivietnam.vn/lasotuvi/ansaotuvi/

feign.client.config.horo-feign-client.loggerLevel=FULL
feign.client.config.default.loggerLevel=FULL

spring.mail.username=HoroApplication
email.sender.username=adssakq123@gmail.com
email.sender.password=vzainwkijgfwejgw
host-port.ec2=13.212.34.59:80
